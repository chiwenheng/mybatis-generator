<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="demo.domain.dal.mapper.original.CrmOrderNotGoodRateMapper">
  <resultMap id="BaseResultMap" type="demo.domain.model.entity.CrmOrderNotGoodRate">
    <id column="orderNGRID" jdbcType="INTEGER" property="orderNGRID" />
    <result column="shopID" jdbcType="INTEGER" property="shopID" />
    <result column="sellerID" jdbcType="BIGINT" property="sellerID" />
    <result column="memberID" jdbcType="BIGINT" property="memberID" />
    <result column="tid" jdbcType="BIGINT" property="tid" />
    <result column="oid" jdbcType="BIGINT" property="oid" />
    <result column="numIid" jdbcType="BIGINT" property="numIid" />
    <result column="buyerRateContent" jdbcType="VARCHAR" property="buyerRateContent" />
    <result column="buyerRateResult" jdbcType="INTEGER" property="buyerRateResult" />
    <result column="buyerRateCreated" jdbcType="INTEGER" property="buyerRateCreated" />
    <result column="created" jdbcType="INTEGER" property="created" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    orderNGRID, shopID, sellerID, memberID, tid, oid, numIid, buyerRateContent, buyerRateResult, 
    buyerRateCreated, created
  </sql>
  <select id="selectByExample" parameterType="demo.domain.model.entity.CrmOrderNotGoodRateExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `crmOrderNotGoodRate`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from `crmOrderNotGoodRate`
    where orderNGRID = #{orderNGRID,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from `crmOrderNotGoodRate`
    where orderNGRID = #{orderNGRID,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="demo.domain.model.entity.CrmOrderNotGoodRateExample">
    delete from `crmOrderNotGoodRate`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="demo.domain.model.entity.CrmOrderNotGoodRate">
    <selectKey keyProperty="orderNGRID" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `crmOrderNotGoodRate` (shopID, sellerID, memberID, 
      tid, oid, numIid, buyerRateContent, 
      buyerRateResult, buyerRateCreated, created
      )
    values (#{shopID,jdbcType=INTEGER}, #{sellerID,jdbcType=BIGINT}, #{memberID,jdbcType=BIGINT}, 
      #{tid,jdbcType=BIGINT}, #{oid,jdbcType=BIGINT}, #{numIid,jdbcType=BIGINT}, #{buyerRateContent,jdbcType=VARCHAR}, 
      #{buyerRateResult,jdbcType=INTEGER}, #{buyerRateCreated,jdbcType=INTEGER}, #{created,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="demo.domain.model.entity.CrmOrderNotGoodRate">
    <selectKey keyProperty="orderNGRID" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `crmOrderNotGoodRate`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="shopID != null">
        shopID,
      </if>
      <if test="sellerID != null">
        sellerID,
      </if>
      <if test="memberID != null">
        memberID,
      </if>
      <if test="tid != null">
        tid,
      </if>
      <if test="oid != null">
        oid,
      </if>
      <if test="numIid != null">
        numIid,
      </if>
      <if test="buyerRateContent != null">
        buyerRateContent,
      </if>
      <if test="buyerRateResult != null">
        buyerRateResult,
      </if>
      <if test="buyerRateCreated != null">
        buyerRateCreated,
      </if>
      <if test="created != null">
        created,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="shopID != null">
        #{shopID,jdbcType=INTEGER},
      </if>
      <if test="sellerID != null">
        #{sellerID,jdbcType=BIGINT},
      </if>
      <if test="memberID != null">
        #{memberID,jdbcType=BIGINT},
      </if>
      <if test="tid != null">
        #{tid,jdbcType=BIGINT},
      </if>
      <if test="oid != null">
        #{oid,jdbcType=BIGINT},
      </if>
      <if test="numIid != null">
        #{numIid,jdbcType=BIGINT},
      </if>
      <if test="buyerRateContent != null">
        #{buyerRateContent,jdbcType=VARCHAR},
      </if>
      <if test="buyerRateResult != null">
        #{buyerRateResult,jdbcType=INTEGER},
      </if>
      <if test="buyerRateCreated != null">
        #{buyerRateCreated,jdbcType=INTEGER},
      </if>
      <if test="created != null">
        #{created,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="demo.domain.model.entity.CrmOrderNotGoodRateExample" resultType="java.lang.Long">
    select count(*) from `crmOrderNotGoodRate`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update `crmOrderNotGoodRate`
    <set>
      <if test="record.orderNGRID != null">
        orderNGRID = #{record.orderNGRID,jdbcType=INTEGER},
      </if>
      <if test="record.shopID != null">
        shopID = #{record.shopID,jdbcType=INTEGER},
      </if>
      <if test="record.sellerID != null">
        sellerID = #{record.sellerID,jdbcType=BIGINT},
      </if>
      <if test="record.memberID != null">
        memberID = #{record.memberID,jdbcType=BIGINT},
      </if>
      <if test="record.tid != null">
        tid = #{record.tid,jdbcType=BIGINT},
      </if>
      <if test="record.oid != null">
        oid = #{record.oid,jdbcType=BIGINT},
      </if>
      <if test="record.numIid != null">
        numIid = #{record.numIid,jdbcType=BIGINT},
      </if>
      <if test="record.buyerRateContent != null">
        buyerRateContent = #{record.buyerRateContent,jdbcType=VARCHAR},
      </if>
      <if test="record.buyerRateResult != null">
        buyerRateResult = #{record.buyerRateResult,jdbcType=INTEGER},
      </if>
      <if test="record.buyerRateCreated != null">
        buyerRateCreated = #{record.buyerRateCreated,jdbcType=INTEGER},
      </if>
      <if test="record.created != null">
        created = #{record.created,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update `crmOrderNotGoodRate`
    set orderNGRID = #{record.orderNGRID,jdbcType=INTEGER},
      shopID = #{record.shopID,jdbcType=INTEGER},
      sellerID = #{record.sellerID,jdbcType=BIGINT},
      memberID = #{record.memberID,jdbcType=BIGINT},
      tid = #{record.tid,jdbcType=BIGINT},
      oid = #{record.oid,jdbcType=BIGINT},
      numIid = #{record.numIid,jdbcType=BIGINT},
      buyerRateContent = #{record.buyerRateContent,jdbcType=VARCHAR},
      buyerRateResult = #{record.buyerRateResult,jdbcType=INTEGER},
      buyerRateCreated = #{record.buyerRateCreated,jdbcType=INTEGER},
      created = #{record.created,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="demo.domain.model.entity.CrmOrderNotGoodRate">
    update `crmOrderNotGoodRate`
    <set>
      <if test="shopID != null">
        shopID = #{shopID,jdbcType=INTEGER},
      </if>
      <if test="sellerID != null">
        sellerID = #{sellerID,jdbcType=BIGINT},
      </if>
      <if test="memberID != null">
        memberID = #{memberID,jdbcType=BIGINT},
      </if>
      <if test="tid != null">
        tid = #{tid,jdbcType=BIGINT},
      </if>
      <if test="oid != null">
        oid = #{oid,jdbcType=BIGINT},
      </if>
      <if test="numIid != null">
        numIid = #{numIid,jdbcType=BIGINT},
      </if>
      <if test="buyerRateContent != null">
        buyerRateContent = #{buyerRateContent,jdbcType=VARCHAR},
      </if>
      <if test="buyerRateResult != null">
        buyerRateResult = #{buyerRateResult,jdbcType=INTEGER},
      </if>
      <if test="buyerRateCreated != null">
        buyerRateCreated = #{buyerRateCreated,jdbcType=INTEGER},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=INTEGER},
      </if>
    </set>
    where orderNGRID = #{orderNGRID,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="demo.domain.model.entity.CrmOrderNotGoodRate">
    update `crmOrderNotGoodRate`
    set shopID = #{shopID,jdbcType=INTEGER},
      sellerID = #{sellerID,jdbcType=BIGINT},
      memberID = #{memberID,jdbcType=BIGINT},
      tid = #{tid,jdbcType=BIGINT},
      oid = #{oid,jdbcType=BIGINT},
      numIid = #{numIid,jdbcType=BIGINT},
      buyerRateContent = #{buyerRateContent,jdbcType=VARCHAR},
      buyerRateResult = #{buyerRateResult,jdbcType=INTEGER},
      buyerRateCreated = #{buyerRateCreated,jdbcType=INTEGER},
      created = #{created,jdbcType=INTEGER}
    where orderNGRID = #{orderNGRID,jdbcType=INTEGER}
  </update>
</mapper>